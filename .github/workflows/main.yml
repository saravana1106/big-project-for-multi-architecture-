name: Multi-Arch Build, Scan & Deploy to GHCR

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Dockerfile dynamically
        run: |
          cat <<'EOF' > Dockerfile
          FROM node:18-slim

          WORKDIR /app
          COPY package*.json ./
          RUN npm install --production
          COPY . .
          EXPOSE 3000
          CMD ["node", "index.js"]
          EOF

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.platform }}
            ${{ env.IMAGE_NAME }}:latest

  docker-scout:
    name: Docker Scout Scan
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh
          sudo mv scout /usr/local/bin/

      - name: Docker Login GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Scan Image for Vulnerabilities
        run: scout cves ${{ env.IMAGE_NAME }}:latest
